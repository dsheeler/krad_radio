#!/usr/bin/env python

import os

programs = """
sigma_mkv.c
kr_mkvinfo.c
kr_pipe.c
""".split()

programs2 = """
kr_mkvhdr.c
""".split()

programs3 = """
kr_mkv_txmtr.c
""".split()

programs4 = """
kr_muxpndr.c
""".split()

programs5 = """
kr_dl_stream.c
""".split()

programs6 = """
kr_v4l2_stream.c
""".split()

programs7 = """
kr_x11_stream.c
""".split()

programs7p = """
kr_x11_pstream.c
""".split()

programs8 = """
kr_machine_test.c
""".split()

krmachinetestsources = """
../lib/krad_ring/krad_ring.c
../lib/krad_player/krad_msg.c
../lib/krad_player/krad_machine.c
../lib/krad_coder/krad_coder_common.c
../lib/krad_coder/krad_encoder.c
../lib/krad_coder/krad_encoder_machine.c
../lib/krad_vorbis/krad_vorbis.c
../lib/krad_vpx/krad_vpx.c
../lib/krad_system/krad_system.c
""".split()

krmkvlibsources = """
../lib/krad_system/krad_system.c
../lib/krad_io/krad_io2.c
../lib/krad_io/krad_file.c
../lib/krad_web/krad_base64.c
../lib/krad_io/krad_stream.c
../lib/krad_ebml/krad_ebml2.c
../lib/krad_ebml/krad_ebml2w.c
../lib/krad_ring/krad_ring.c
../lib/krad_transmitter/krad_transmitter.c
../lib/krad_chronometer/krad_ticker.c
../lib/krad_mkv/krad_mkv.c
../lib/krad_mkv/krad_mkv_demux.c
../lib/krad_vorbis/krad_vorbis.c
../lib/krad_coder/krad_coder_common.c
../lib/krad_vpx/krad_vpx.c
""".split()

krmkvhdrsources = """
../lib/krad_theora/krad_theora.c
../lib/krad_vorbis/krad_vorbis.c
../lib/krad_flac/krad_flac.c
../lib/krad_opus/krad_opus.c
../lib/krad_opus/opus_header.c
../lib/krad_ogg/krad_ogg2.c
""".split()

krmuxpdrsources = """
../lib/krad_muxponder/krad_muxponder.c
""".split()

krdlcapsrces = """
../lib/krad_decklink/krad_decklink.c
../lib/krad_decklink/krad_decklink_capture.cpp
../lib/krad_framepool/krad_framepool.c
""".split()

krdlcapmacsrces = """
../lib/krad_system/krad_system.c
../lib/krad_legacy/krad_mach.c
../lib/krad_io/krad_io2.c
../lib/krad_web/krad_base64.c
../lib/krad_io/krad_file.c
../lib/krad_io/krad_stream.c
../lib/krad_ebml/krad_ebml2.c
../lib/krad_ebml/krad_ebml2w.c
../lib/krad_ring/krad_ring.c
../lib/krad_transmitter/krad_transmitter.c
../lib/krad_chronometer/krad_ticker.c
../lib/krad_mkv/krad_mkv.c
../lib/krad_mkv/krad_mkv_demux.c
../lib/krad_vorbis/krad_vorbis.c
../lib/krad_coder/krad_coder_common.c
../lib/krad_vpx/krad_vpx.c
../lib/krad_decklink/krad_decklink.c
../lib/krad_decklink/krad_decklink_capture.cpp
../lib/krad_decklink/vendor/osx/DeckLinkAPIDispatch.cpp
../lib/krad_framepool/krad_framepool_nc.c
""".split()

krv4l2capsrces = """
../lib/krad_framepool/krad_framepool.c
../lib/krad_v4l2/krad_v4l2.c
../lib/krad_chronometer/krad_timer.c
""".split()

krx11capsrces = """
../lib/krad_framepool/krad_framepool.c
../lib/krad_x11/krad_x11.c
../lib/krad_chronometer/krad_timer.c
../lib/krad_chronometer/krad_ticker.c
""".split()

krperspsrces = """
../lib/krad_compositor/krad_perspective.c
""".split()

includedirs = """
../lib/krad_muxponder/
../lib/krad_compositor/
../lib/krad_chronometer/
../lib/krad_xmms2/
../lib/krad_y4m/
../lib/krad_framepool/
../lib/krad_web/
../lib/krad_web/ext/
../lib/krad_web/ext/libwebsockets/
../lib/krad_web/res/
../lib/krad_vhs/
../lib/krad_vhs/ext
../lib/krad_vhs/ext/imagezero
../lib/krad_sfx/
../lib/krad_tone/
../lib/krad_ipc/
../lib/krad_tags/
../lib/krad_audio/
../lib/krad_theora/
../lib/krad_jack/
../lib/krad_alsa/
../lib/krad_mixer/
../lib/krad_osc/
../lib/krad_xmms2/
../lib/krad_wayland/
../lib/krad_vpx/
../lib/krad_v4l2/
../lib/krad_flac/
../lib/krad_coder/
../lib/krad_vorbis/
../lib/krad_opus/
../lib/krad_radio/
../lib/krad_ring/
../lib/krad_ogg/
../lib/krad_io/
../lib/krad_mkv/
../lib/krad_player/
../lib/krad_transponder/
../lib/krad_transmitter/
../lib/krad_container/
../lib/krad_x11/
../lib/krad_udp/
../lib/krad_system/
../lib/krad_decklink/
../lib/krad_ebml/
../lib/krad_legacy/
/usr/local/include
/usr/include
""".split()

kmkvshlibs = ["vpx", "cairo", "opus", "vorbis", "vorbisenc", "flac",
                 "theoradec", "theoraenc", "samplerate", "libswscale"]

kmkvhdrshlibs = ["opus", "vorbis", "vorbisenc", "flac", "vpx",
                 "theoradec", "theoraenc", "samplerate", "libswscale"]

krdlcapmaclibs = ["vpx", "vorbis", "vorbisenc", "swscale", "avutil", "ogg"]

krtxpndrlibs = []
shlibs = []
stlibs = []
syslibs = ['m', 'dl', 'z']
shlibsx11 = ["x11-xcb", "xcb-image", "xcb-shm", "xcb", "x11"]
syslibs2 = ['pthread', 'rt']
syslibs3 = ['turbojpeg']
plibs = ['rt', 'pthread']

def check_x11(x11):
  if x11.options.nox11 == False:
    x11.env['KRAD_USE_X11'] = "yes"
    x11.env.append_unique('CFLAGS', ['-DKRAD_USE_X11'])

def check_system2(systm):

  global krmkvlibsources
  global krdlcapsrces
  global includedirs
  global libav_dir
  global programs
  global kmkvshlibs
  global syslibs
  global shlibs
  global syslibs2
  global krmachinetestsources

  if systm.env['KR_LINUX']:
    syslibs = syslibs + syslibs2


  if systm.env['FRAK_MACOSX']:
    #libsources = ["../lib/krad_legacy/krad_mach.c"] + libsources
    #includedirs = ["/opt/libjpeg-turbo/include"] + includedirs
    #kmkvshlibs = kmkvshlibs + ['turbojpeg']
    syslibs = syslibs + ['pthread']

  if systm.env['KRAD_USE_X11']:
    #depsources += ["../lib/krad_x11/krad_x11.c"]
    shlibs += ["x11-xcb", "xcb-image", "xcb-shm", "xcb", "x11"]

  if systm.env['KR_LINUX']:
    krdlcapsrces = krdlcapsrces + ["../lib/krad_decklink/vendor/linux/DeckLinkAPIDispatch.cpp"]
    includedirs = includedirs + ["../lib/krad_decklink/vendor/linux/"]

  if systm.env['FRAK_MACOSX']:
    systm.check_cxx(framework_name='CoreAudio')
    systm.check_cxx(framework_name='AudioToolbox')
    systm.check_cxx(framework_name='CoreServices')
    includedirs = ["../lib/krad_decklink/vendor/osx/", "../lib/krad_legacy/"] + includedirs
    krmkvlibsources = ["../lib/krad_legacy/krad_mach.c"] + krmkvlibsources
    krmachinetestsources = ["../lib/krad_legacy/krad_mach.c"] + krmachinetestsources
    syslibs = ['m', 'dl']

def configure(conf):

  global krdlcapmaclibs
  global krdlcapsrces
  global includedirs
  global libav_dir
  global programs
  global kmkvshlibs
  global syslibs2
  global syslibs
  global shlibs
  check_system2(conf)
  check_x11(conf)

  if conf.env['KR_LINUX']:
    for l in syslibs:
      conf.check(lib = l, cflags='-Wall', uselib_store = l)

    for l in shlibs:
      conf.check_cfg(package = l, uselib_store = l, args='--cflags --libs')

    for l in kmkvshlibs:
      conf.check_cfg(package = l, uselib_store = l, args='--cflags --libs')

    for l in stlibs:
      conf.check_cfg(package = l,
                     uselib_store = l,
                     args='--cflags --libs --static')

  if conf.env['FRAK_MACOSX']:
    for l in krdlcapmaclibs:
      conf.check(lib = l, cflags='-Wall', uselib_store = l, args='--cflags --libs --static')

  if conf.env['KRAD_USE_X11']:
    #depsources += ["../lib/krad_x11/krad_x11.c"]
    shlibs += ["x11-xcb", "xcb-image", "xcb-shm", "xcb", "x11"]

def build(bld):

  global krdlcapmaclibs
  global krdlcapsrces
  global includedirs
  global libav_dir
  global programs
  global kmkvshlibs
  global syslibs
  global syslibs2
  global shlibs
  global plibs
  global shlibs2
  global shlibsx11
  global krdlcapsrces
  global krperspsrces
  global includedirs
  check_x11(bld)
  check_system2(bld)

  # read version number to be used for the shared library
  f = open("lib/krad_radio/krad_radio_version.h", "r")
  for line in f:
    if "#define VERSION_NUMBER" in line:
      krad_version = line.split(' ')[2].strip()
      break
  f.close()

  # we use "KRAD_VERSION.0.0" for now as vnum. this basically means 
  # that we advise to rebuild clients every new version due to 
  # possible API-breakages. closest to reality currently.
  # plan for later: "API_VERSION.KRAD_VERSION.0" so rebuild is only 
  # needed when we _really_ break the API

  if bld.env['FRAK_MACOSX']:
    for p in programs5:
      bld.stlib(features = "c cxx",
      source = [p] + krdlcapmacsrces,
      includes = includedirs,
      target = p.replace(".c", ""),
      framework = ["CoreFoundation", "CoreServices"], 
      uselib = krdlcapmaclibs)

  if bld.env['KR_LINUX']:
    for p in programs:
      bld(features = 'c cprogram', 
      source = [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs + plibs)

    for p in programs2:
      bld(features = 'c cprogram', 
      source = [p] + krmkvhdrsources,
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs + plibs)

    for p in programs3:
      bld(features = 'c cprogram',
      source = krmkvhdrsources + [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs + plibs)

    for p in programs4:
      bld(features = 'c cprogram',
      source = krmuxpdrsources + krmkvhdrsources + [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs + plibs)

    for p in programs5:
      bld(features = 'c cprogram cxx cxxprogram',
      source = krdlcapsrces + [p] + krmuxpdrsources + krmkvhdrsources,
      includes = includedirs,
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = syslibs + kmkvshlibs + kmkvhdrshlibs + shlibs + stlibs + plibs)

    for p in programs6:
      bld(features = 'c cprogram',
      source = krv4l2capsrces + krmuxpdrsources + krmkvhdrsources + [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs3 + syslibs + plibs)

    for p in programs7:
      bld(features = 'c cprogram',
      source = krx11capsrces + krmuxpdrsources + krmkvhdrsources + [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = shlibsx11 + kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs3 + syslibs + plibs)

    for p in programs7p:
      bld(features = 'c cprogram',
      source = krperspsrces + krx11capsrces + krmuxpdrsources + krmkvhdrsources + [p],
      includes = includedirs, 
      target = p.replace(".c", ""),
      use = ["krad_mkv"],
      uselib = shlibsx11 + kmkvshlibs + kmkvhdrshlibs + stlibs + syslibs3 + syslibs + plibs)

  for p in programs8:
    bld(features = 'c cprogram',
    source = krmachinetestsources + [p],
    includes = includedirs, 
    target = p.replace(".c", ""),
    use = [""],
    uselib = kmkvshlibs + syslibs + plibs)

    bld.shlib(
      source = krmkvlibsources, 
      includes = includedirs, 
      target = "krad_mkv",
      vnum = krad_version + ".0.0",
      uselib = kmkvshlibs + stlibs + syslibs)
