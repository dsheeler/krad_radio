#ifndef COMMON_GEN_H
#define COMMON_GEN_H
#include "krad_ebmlx.h"

typedef struct {
  int type;
  void *actual;
} uber_St;

int info_pack_to_text(char *text, uber_St *uber, int32_t max);
typedef int (*info_pack_to_text_func)(char *text, void *st, int max);
int info_pack_to_json(char *json, uber_St *uber, int32_t max);
typedef int (*info_pack_to_json_func)(char *json, void *st, int max);
int info_unpack_fr_json(char *json, uber_St *uber);
typedef int (*info_unpack_fr_json_func)(char *json, void *st);
int info_pack_to_ebml(kr_ebml *ebml, uber_St *uber);
typedef int (*info_pack_to_ebml_func)(kr_ebml *ebml, void *st);
int info_unpack_fr_ebml(kr_ebml *ebml, uber_St *uber);
typedef int (*info_unpack_fr_ebml_func)(kr_ebml *ebml, void *st);

typedef enum {
  TEXT_KR_ALSA_INFO = 1,
  TEXT_KR_ALSA_PATH_INFO,
  TEXT_KR_COMPOSITOR_PATH_TYPE,
  TEXT_KR_COMPOSITOR_SUBUNIT_TYPE,
  TEXT_KR_VECTOR_TYPE,
  TEXT_KR_COMPOSITOR_CONTROL,
  TEXT_KR_COMPOSITOR_CONTROLS,
  TEXT_KR_SPRITE_INFO,
  TEXT_KR_TEXT_INFO,
  TEXT_KR_VECTOR_INFO,
  TEXT_KR_COMPOSITOR_PATH_INFO,
  TEXT_KR_COMPOSITOR_INFO,
  TEXT_KR_POS,
  TEXT_KR_PERSPECTIVE_VIEW,
  TEXT_KR_PERSPECTIVE,
  TEXT_KRAD_CODEC_T,
  TEXT_KRAD_CONTAINER_TYPE_T,
  TEXT_KR_DECKLINK_INFO,
  TEXT_KR_DECKLINK_PATH_INFO,
  TEXT_KR_JACK_DIRECTION,
  TEXT_KR_JACK_STATE,
  TEXT_KR_JACK_SETUP_INFO,
  TEXT_KR_JACK_INFO,
  TEXT_KR_JACK_PATH_INFO,
  TEXT_KR_MIXER_CHANNELS,
  TEXT_KR_MIXER_CONTROL,
  TEXT_KR_MIXER_PATH_TYPE,
  TEXT_KR_MIXER_ADV_CTL,
  TEXT_KR_MIXER_INFO,
  TEXT_KR_MIXER_PATH_INFO,
  TEXT_KR_SFX_CONTROL,
  TEXT_KR_SFX_EFFECT_TYPE,
  TEXT_KR_SFX_EFFECT_CONTROL,
  TEXT_KR_EQ_BAND_INFO,
  TEXT_KR_EQ_INFO,
  TEXT_KR_LOWPASS_INFO,
  TEXT_KR_HIGHPASS_INFO,
  TEXT_KR_ANALOG_INFO,
  TEXT_KR_ADAPTER_PATH_DIRECTION,
  TEXT_KR_ADAPTER_API,
  TEXT_KR_ADAPTER_API_INFO,
  TEXT_KR_ADAPTER_API_PATH_INFO,
  TEXT_KR_ADAPTER_INFO,
  TEXT_KR_ADAPTER_PATH_INFO,
  TEXT_KRAD_LINK_AV_MODE_T,
  TEXT_KR_TXPDR_SU_TYPE_T,
  TEXT_KRAD_LINK_TRANSPORT_MODE_T,
  TEXT_KR_TRANSPONDER_PATH_IO_TYPE,
  TEXT_KR_TRANSPONDER_INFO,
  TEXT_KR_TRANSPONDER_PATH_IO_PATH_INFO,
  TEXT_KR_TRANSPONDER_PATH_IO_INFO,
  TEXT_KR_TRANSPONDER_PATH_INFO,
  TEXT_KR_V4L2_STATE,
  TEXT_KR_V4L2_MODE,
  TEXT_KR_V4L2_INFO,
  TEXT_KR_V4L2_OPEN_INFO,
  TEXT_KR_WAYLAND_INFO,
  TEXT_KR_WAYLAND_PATH_INFO,
  TEXT_KR_X11_INFO,
  TEXT_KR_X11_PATH_INFO
} text_enum;

enum {
  TEXT_ENUM_LAST = 60
};

typedef enum {
  JSON_KR_ALSA_INFO = 1,
  JSON_KR_ALSA_PATH_INFO,
  JSON_KR_COMPOSITOR_PATH_TYPE,
  JSON_KR_COMPOSITOR_SUBUNIT_TYPE,
  JSON_KR_VECTOR_TYPE,
  JSON_KR_COMPOSITOR_CONTROL,
  JSON_KR_COMPOSITOR_CONTROLS,
  JSON_KR_SPRITE_INFO,
  JSON_KR_TEXT_INFO,
  JSON_KR_VECTOR_INFO,
  JSON_KR_COMPOSITOR_PATH_INFO,
  JSON_KR_COMPOSITOR_INFO,
  JSON_KR_POS,
  JSON_KR_PERSPECTIVE_VIEW,
  JSON_KR_PERSPECTIVE,
  JSON_KRAD_CODEC_T,
  JSON_KRAD_CONTAINER_TYPE_T,
  JSON_KR_DECKLINK_INFO,
  JSON_KR_DECKLINK_PATH_INFO,
  JSON_KR_JACK_DIRECTION,
  JSON_KR_JACK_STATE,
  JSON_KR_JACK_SETUP_INFO,
  JSON_KR_JACK_INFO,
  JSON_KR_JACK_PATH_INFO,
  JSON_KR_MIXER_CHANNELS,
  JSON_KR_MIXER_CONTROL,
  JSON_KR_MIXER_PATH_TYPE,
  JSON_KR_MIXER_ADV_CTL,
  JSON_KR_MIXER_INFO,
  JSON_KR_MIXER_PATH_INFO,
  JSON_KR_SFX_CONTROL,
  JSON_KR_SFX_EFFECT_TYPE,
  JSON_KR_SFX_EFFECT_CONTROL,
  JSON_KR_EQ_BAND_INFO,
  JSON_KR_EQ_INFO,
  JSON_KR_LOWPASS_INFO,
  JSON_KR_HIGHPASS_INFO,
  JSON_KR_ANALOG_INFO,
  JSON_KR_ADAPTER_PATH_DIRECTION,
  JSON_KR_ADAPTER_API,
  JSON_KR_ADAPTER_API_INFO,
  JSON_KR_ADAPTER_API_PATH_INFO,
  JSON_KR_ADAPTER_INFO,
  JSON_KR_ADAPTER_PATH_INFO,
  JSON_KRAD_LINK_AV_MODE_T,
  JSON_KR_TXPDR_SU_TYPE_T,
  JSON_KRAD_LINK_TRANSPORT_MODE_T,
  JSON_KR_TRANSPONDER_PATH_IO_TYPE,
  JSON_KR_TRANSPONDER_INFO,
  JSON_KR_TRANSPONDER_PATH_IO_PATH_INFO,
  JSON_KR_TRANSPONDER_PATH_IO_INFO,
  JSON_KR_TRANSPONDER_PATH_INFO,
  JSON_KR_V4L2_STATE,
  JSON_KR_V4L2_MODE,
  JSON_KR_V4L2_INFO,
  JSON_KR_V4L2_OPEN_INFO,
  JSON_KR_WAYLAND_INFO,
  JSON_KR_WAYLAND_PATH_INFO,
  JSON_KR_X11_INFO,
  JSON_KR_X11_PATH_INFO
} json_enum;

enum {
  JSON_ENUM_LAST = 60
};

typedef enum {
  DEJSON_KR_MIXER_CHANNELS = 1,
  DEJSON_KR_MIXER_CONTROL,
  DEJSON_KR_MIXER_PATH_TYPE,
  DEJSON_KR_MIXER_ADV_CTL,
  DEJSON_KR_MIXER_INFO,
  DEJSON_KR_MIXER_PATH_INFO,
  DEJSON_KR_SFX_CONTROL,
  DEJSON_KR_SFX_EFFECT_TYPE,
  DEJSON_KR_SFX_EFFECT_CONTROL,
  DEJSON_KR_EQ_BAND_INFO,
  DEJSON_KR_EQ_INFO,
  DEJSON_KR_LOWPASS_INFO,
  DEJSON_KR_HIGHPASS_INFO,
  DEJSON_KR_ANALOG_INFO,
  DEJSON_KR_V4L2_STATE,
  DEJSON_KR_V4L2_MODE,
  DEJSON_KR_V4L2_INFO,
  DEJSON_KR_V4L2_OPEN_INFO
} dejson_enum;

enum {
  DEJSON_ENUM_LAST = 18
};

typedef enum {
  EBML_KR_ALSA_INFO = 1,
  EBML_KR_ALSA_PATH_INFO,
  EBML_KR_COMPOSITOR_PATH_TYPE,
  EBML_KR_COMPOSITOR_SUBUNIT_TYPE,
  EBML_KR_VECTOR_TYPE,
  EBML_KR_COMPOSITOR_CONTROL,
  EBML_KR_COMPOSITOR_CONTROLS,
  EBML_KR_SPRITE_INFO,
  EBML_KR_TEXT_INFO,
  EBML_KR_VECTOR_INFO,
  EBML_KR_COMPOSITOR_PATH_INFO,
  EBML_KR_COMPOSITOR_INFO,
  EBML_KR_POS,
  EBML_KR_PERSPECTIVE_VIEW,
  EBML_KR_PERSPECTIVE,
  EBML_KRAD_CODEC_T,
  EBML_KRAD_CONTAINER_TYPE_T,
  EBML_KR_DECKLINK_INFO,
  EBML_KR_DECKLINK_PATH_INFO,
  EBML_KRAD_IO_MODE_T,
  EBML_KR_IO2_ST,
  EBML_KR_JACK_DIRECTION,
  EBML_KR_JACK_STATE,
  EBML_KR_JACK_SETUP_INFO,
  EBML_KR_JACK_INFO,
  EBML_KR_JACK_PATH_INFO,
  EBML_KR_MIXER_CHANNELS,
  EBML_KR_MIXER_CONTROL,
  EBML_KR_MIXER_PATH_TYPE,
  EBML_KR_MIXER_ADV_CTL,
  EBML_KR_MIXER_INFO,
  EBML_KR_MIXER_PATH_INFO,
  EBML_KR_SFX_CONTROL,
  EBML_KR_SFX_EFFECT_TYPE,
  EBML_KR_SFX_EFFECT_CONTROL,
  EBML_KR_EQ_BAND_INFO,
  EBML_KR_EQ_INFO,
  EBML_KR_LOWPASS_INFO,
  EBML_KR_HIGHPASS_INFO,
  EBML_KR_ANALOG_INFO,
  EBML_KR_ADAPTER_PATH_DIRECTION,
  EBML_KR_ADAPTER_API,
  EBML_KR_ADAPTER_API_INFO,
  EBML_KR_ADAPTER_API_PATH_INFO,
  EBML_KR_ADAPTER_INFO,
  EBML_KR_ADAPTER_PATH_INFO,
  EBML_KRAD_LINK_AV_MODE_T,
  EBML_KR_TXPDR_SU_TYPE_T,
  EBML_KRAD_LINK_TRANSPORT_MODE_T,
  EBML_KR_TRANSPONDER_PATH_IO_TYPE,
  EBML_KR_TRANSPONDER_INFO,
  EBML_KR_TRANSPONDER_PATH_IO_PATH_INFO,
  EBML_KR_TRANSPONDER_PATH_IO_INFO,
  EBML_KR_TRANSPONDER_PATH_INFO,
  EBML_KR_V4L2_STATE,
  EBML_KR_V4L2_MODE,
  EBML_KR_V4L2_INFO,
  EBML_KR_V4L2_OPEN_INFO,
  EBML_KR_WAYLAND_INFO,
  EBML_KR_WAYLAND_PATH_INFO,
  EBML_KR_X11_INFO,
  EBML_KR_X11_PATH_INFO
} ebml_enum;

enum {
  EBML_ENUM_LAST = 62
};

typedef enum {
  DEBML_KR_ALSA_INFO = 1,
  DEBML_KR_ALSA_PATH_INFO,
  DEBML_KR_COMPOSITOR_PATH_TYPE,
  DEBML_KR_COMPOSITOR_SUBUNIT_TYPE,
  DEBML_KR_VECTOR_TYPE,
  DEBML_KR_COMPOSITOR_CONTROL,
  DEBML_KR_COMPOSITOR_CONTROLS,
  DEBML_KR_SPRITE_INFO,
  DEBML_KR_TEXT_INFO,
  DEBML_KR_VECTOR_INFO,
  DEBML_KR_COMPOSITOR_PATH_INFO,
  DEBML_KR_COMPOSITOR_INFO,
  DEBML_KR_POS,
  DEBML_KR_PERSPECTIVE_VIEW,
  DEBML_KR_PERSPECTIVE,
  DEBML_KRAD_CODEC_T,
  DEBML_KRAD_CONTAINER_TYPE_T,
  DEBML_KR_DECKLINK_INFO,
  DEBML_KR_DECKLINK_PATH_INFO,
  DEBML_KR_JACK_DIRECTION,
  DEBML_KR_JACK_STATE,
  DEBML_KR_JACK_SETUP_INFO,
  DEBML_KR_JACK_INFO,
  DEBML_KR_JACK_PATH_INFO,
  DEBML_KR_MIXER_CHANNELS,
  DEBML_KR_MIXER_CONTROL,
  DEBML_KR_MIXER_PATH_TYPE,
  DEBML_KR_MIXER_ADV_CTL,
  DEBML_KR_MIXER_INFO,
  DEBML_KR_MIXER_PATH_INFO,
  DEBML_KR_SFX_CONTROL,
  DEBML_KR_SFX_EFFECT_TYPE,
  DEBML_KR_SFX_EFFECT_CONTROL,
  DEBML_KR_EQ_BAND_INFO,
  DEBML_KR_EQ_INFO,
  DEBML_KR_LOWPASS_INFO,
  DEBML_KR_HIGHPASS_INFO,
  DEBML_KR_ANALOG_INFO,
  DEBML_KR_ADAPTER_PATH_DIRECTION,
  DEBML_KR_ADAPTER_API,
  DEBML_KR_ADAPTER_API_INFO,
  DEBML_KR_ADAPTER_API_PATH_INFO,
  DEBML_KR_ADAPTER_INFO,
  DEBML_KR_ADAPTER_PATH_INFO,
  DEBML_KRAD_LINK_AV_MODE_T,
  DEBML_KR_TXPDR_SU_TYPE_T,
  DEBML_KRAD_LINK_TRANSPORT_MODE_T,
  DEBML_KR_TRANSPONDER_PATH_IO_TYPE,
  DEBML_KR_TRANSPONDER_INFO,
  DEBML_KR_TRANSPONDER_PATH_IO_PATH_INFO,
  DEBML_KR_TRANSPONDER_PATH_IO_INFO,
  DEBML_KR_TRANSPONDER_PATH_INFO,
  DEBML_KR_V4L2_STATE,
  DEBML_KR_V4L2_MODE,
  DEBML_KR_V4L2_INFO,
  DEBML_KR_V4L2_OPEN_INFO,
  DEBML_KR_WAYLAND_INFO,
  DEBML_KR_WAYLAND_PATH_INFO,
  DEBML_KR_X11_INFO,
  DEBML_KR_X11_PATH_INFO
} debml_enum;

enum {
  DEBML_ENUM_LAST = 60
};

typedef enum {
  HELPERS_KR_ALSA_INFO = 1,
  HELPERS_KR_ALSA_PATH_INFO,
  HELPERS_KR_COMPOSITOR_PATH_TYPE,
  HELPERS_KR_COMPOSITOR_SUBUNIT_TYPE,
  HELPERS_KR_VECTOR_TYPE,
  HELPERS_KR_COMPOSITOR_CONTROL,
  HELPERS_KR_COMPOSITOR_CONTROLS,
  HELPERS_KR_SPRITE_INFO,
  HELPERS_KR_TEXT_INFO,
  HELPERS_KR_VECTOR_INFO,
  HELPERS_KR_COMPOSITOR_PATH_INFO,
  HELPERS_KR_COMPOSITOR_INFO,
  HELPERS_KR_POS,
  HELPERS_KR_PERSPECTIVE_VIEW,
  HELPERS_KR_PERSPECTIVE,
  HELPERS_KRAD_CODEC_T,
  HELPERS_KRAD_CONTAINER_TYPE_T,
  HELPERS_KR_DECKLINK_INFO,
  HELPERS_KR_DECKLINK_PATH_INFO,
  HELPERS_KR_JACK_DIRECTION,
  HELPERS_KR_JACK_STATE,
  HELPERS_KR_JACK_SETUP_INFO,
  HELPERS_KR_JACK_INFO,
  HELPERS_KR_JACK_PATH_INFO,
  HELPERS_KR_MIXER_CHANNELS,
  HELPERS_KR_MIXER_CONTROL,
  HELPERS_KR_MIXER_PATH_TYPE,
  HELPERS_KR_MIXER_ADV_CTL,
  HELPERS_KR_MIXER_INFO,
  HELPERS_KR_MIXER_PATH_INFO,
  HELPERS_KR_SFX_CONTROL,
  HELPERS_KR_SFX_EFFECT_TYPE,
  HELPERS_KR_SFX_EFFECT_CONTROL,
  HELPERS_KR_EQ_BAND_INFO,
  HELPERS_KR_EQ_INFO,
  HELPERS_KR_LOWPASS_INFO,
  HELPERS_KR_HIGHPASS_INFO,
  HELPERS_KR_ANALOG_INFO,
  HELPERS_KR_ADAPTER_PATH_DIRECTION,
  HELPERS_KR_ADAPTER_API,
  HELPERS_KR_ADAPTER_API_INFO,
  HELPERS_KR_ADAPTER_API_PATH_INFO,
  HELPERS_KR_ADAPTER_INFO,
  HELPERS_KR_ADAPTER_PATH_INFO,
  HELPERS_KRAD_LINK_AV_MODE_T,
  HELPERS_KR_TXPDR_SU_TYPE_T,
  HELPERS_KRAD_LINK_TRANSPORT_MODE_T,
  HELPERS_KR_TRANSPONDER_PATH_IO_TYPE,
  HELPERS_KR_TRANSPONDER_INFO,
  HELPERS_KR_TRANSPONDER_PATH_IO_PATH_INFO,
  HELPERS_KR_TRANSPONDER_PATH_IO_INFO,
  HELPERS_KR_TRANSPONDER_PATH_INFO,
  HELPERS_KR_V4L2_STATE,
  HELPERS_KR_V4L2_MODE,
  HELPERS_KR_V4L2_INFO,
  HELPERS_KR_V4L2_OPEN_INFO,
  HELPERS_KR_WAYLAND_INFO,
  HELPERS_KR_WAYLAND_PATH_INFO,
  HELPERS_KR_X11_INFO,
  HELPERS_KR_X11_PATH_INFO
} helpers_enum;

enum {
  HELPERS_ENUM_LAST = 60
};


#endif

